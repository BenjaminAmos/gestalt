/*
 * Copyright 2019 MovingBlocks
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()

        // Needed for the Android Gradle Plugin to work
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.3'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'project-report'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "org.terasology.gestalt.android.testbed"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        merge 'META-INF/annotations/*'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation project(':gestalt-android')
    implementation project(':gestalt-asset-core')
    implementation project(":gestalt-entity-system")
    implementation "com.google.guava:guava:$guava_version"
    implementation "org.slf4j:slf4j-api:$slf4j_version"
    implementation 'com.github.tony19:logback-android:1.3.0-3'
    implementation project(':testpack:testpack-api')
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    annotationProcessor project(":gestalt-inject-java")
}

// Android projects don't provide direct access to compileJava but this seems to work.
// https://stackoverflow.com/a/42297051
gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        // Adds Resources as parameter for AnnotationProcessor (gather ResourceIndex,
        // also add resource as input for compilejava, for re-gathering ResourceIndex, when resource was changed.
        inputs.files android.sourceSets.main.resources.srcDirs
        options.compilerArgs = ["-Aresource=${android.sourceSets.main.resources.srcDirs.join(File.pathSeparator)}"]
    }
}
